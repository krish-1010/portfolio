// import { React, useState } from "react";
import "./Projects.css";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const projects = [
  {
    title: "AR Product Preview",
    spanClass: "lightpurple wh",
    desc: "Android app using AR technology to preview 3D models in real-time by downloading them using FTP.",
    more: "Unity Engine for development, C# for scripting, Gradle for builds.",
  },
  {
    title: "Nexus Webfolio",
    spanClass: "lightpurple b",
    desc: "A dynamic, space-themed web-folio for Anna University, with an AI chatbot to assist HRs.",
    more: "Next.js with GSAP for animations, AI chatbot with custom training, Cloudinary CDN for image optimization.",
  },
  {
    title: "Space Board Game",
    spanClass: "lightpurple",
    desc: "A space-themed board game with dynamic animations and advanced layouts for interactive gameplay.",
    more: "Next.js for frontend and backend, PostgreSQL via Docker, GSAP and Framer for animations.",
  },
  {
    title: "Veloit AI",
    spanClass: "lightpurple wh",
    desc: "A no-code machine learning API which can be integrated in applications for machine learning.",
    more: "Frontend in Flutter; Flask and Firebase for backend.",
  },
  {
    title: "Brain Waves",
    spanClass: "lightpurple b",
    desc: "A method to interpret brain waves, with an aim to aid disabled people. Funded by Loyola Research Park.",
    more: "Non-invasive EEG is used with Python for ML algorithms.",
  },
  {
    title: "Pen-to-text",
    spanClass: "lightpurple",
    desc: "A web app that converts text from an image into editable digital text using OCR technology.",
    more: "Frontend in React.js, Pen-to-Print API for text recognition.",
  },
  {
    title: "Least Squares Line Fitting Tool (GUI)",
    spanClass: "lightpurple wh",
    desc: "Desktop tool for fitting and visualizing best-fit lines using the Least Squares method.",
    more: "Built with PyQt5 and matplotlib for GUI and plotting. Displays linear equation for educational use.",
  },
  {
    title: "ReviseIt – Bitwise Audio Revision App",
    spanClass: "lightpurple b",
    desc: "Audio-based revision platform with bite-sized lessons for students and UPSC aspirants.",
    more: "Built using Next.js and Supabase; seamless playback via Howler.js. Supports regional languages.",
  },
  {
    title: "Invoice Automation Tool",
    spanClass: "lightpurple",
    desc: "Desktop tool for generating invoices from structured data with error checking.",
    more: "Developed with Python and JavaScript. Supports custom templates and CSV imports.",
  },
  {
    title: "Real-Time Chat App",
    spanClass: "lightpurple wh",
    desc: "React and Firebase based chat app supporting real-time messaging and multiple rooms.",
    more: "Features Google Auth, live updates, and dynamic message filtering.",
  },
  {
    title: "Whisper AI Backend – German Pronunciation Evaluator",
    spanClass: "lightpurple",
    desc: "Python backend using OpenAI Whisper for German speech pronunciation scoring.",
    more: "Receives audio, returns similarity score and feedback via API.",
  },
  {
    title: "Dacoid – Dynamic Event Calendar",
    spanClass: "lightpurple",
    desc: "Dynamic React calendar app to create, edit, and view events with offline support.",
    more: "Uses TypeScript, TailwindCSS, and localStorage for persistence and smooth UX.",
  },
  {
    title: "Gasgo UserHub – Microservice API Platform",
    spanClass: "lightpurple wh",
    desc: "Modular microservice system for user management, built with Java Spring Boot.",
    more: "REST APIs, Docker, MySQL, Swagger docs, and production-ready deployment.",
  },
];

const PROJECTS_PER_SLIDE = 6;

// Utility: split array into chunks of N
function chunkArray(array, size) {
  const result = [];
  for (let i = 0; i < array.length; i += size) {
    result.push(array.slice(i, i + size));
  }
  return result;
}

// const projectChunks = chunkArray(projects, 6); // groups of 6

const Projects = () => {
  const projectChunks = chunkArray(projects, PROJECTS_PER_SLIDE);
  // const [page, setPage] = useState(0);
  // const maxPage = Math.ceil(projects.length / PROJECTS_PER_PAGE) - 1;

  // const handlePrev = () => setPage((page) => Math.max(page - 1, 0));
  // const handleNext = () => setPage((page) => Math.min(page + 1, maxPage));

  // const currentProjects = projects.slice(
  //   page * PROJECTS_PER_PAGE,
  //   page * PROJECTS_PER_PAGE + PROJECTS_PER_PAGE
  // );
  const settings = {
    dots: true,
    infinite: true,
    speed: 600,
    slidesToShow: 1, // 1 "grid" at a time!
    slidesToScroll: 1,
    arrows: true,
    adaptiveHeight: true,
    autoplay: false, // <-- enable autoplay
    autoplaySpeed: 3500, // <-- ms per slide (e.g. 3500 = 3.5s)
    pauseOnHover: true, // <-- optional: pause on mouse hover

    // Optionally disable swipe on desktop for full "page" feeling:
    // swipe: false
  };

  // Break projects array into groups of 6 for true “pages of 6”
  // const slides = [];
  // for (let i = 0; i < projects.length; i += 6) {
  //   slides.push(projects.slice(i, i + 6));
  // }
  return (
    <div className="projects" id="projects">
      <div className="container">
        <h2>
          <span className="gray">My </span>
          <span className="purple"> Projects</span>
        </h2>

        <Slider {...settings}>
          {projectChunks.map((group, slideIdx) => (
            <div key={slideIdx}>
              <div className="row">
                {group.map((project, idx) => (
                  <div className="col box" key={idx}>
                    <span className={project.spanClass}>{project.title}</span>
                    <h4 className="desc">{project.desc}</h4>
                    <p className="more">{project.more}</p>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </Slider>

        {/* <div className="row">
          {currentProjects.map((project, idx) => (
            <div className="col box" key={idx + page * PROJECTS_PER_PAGE}>
              <span className={project.spanClass}>{project.title}</span>
              <h4 className="desc">{project.desc}</h4>
              <p className="more">{project.more}</p>
            </div>
          ))}
        </div>

        <div className="pagination-btns" style={{ marginTop: 32 }}>
          <button onClick={handlePrev} disabled={page === 0}>
            &#8592; Previous
          </button>
          <span style={{ margin: "0 1rem" }}>
            Page {page + 1} of {maxPage + 1}
          </span>
          <button onClick={handleNext} disabled={page === maxPage}>
            Next &#8594;
          </button>
        </div> */}

        {/* <div className="row">
          {projects.map((project, idx) => (
            <div className="col box" key={idx}>
              <span className={project.spanClass}>{project.title}</span>
              <h4 className="desc">{project.desc}</h4>
              <p className="more">{project.more}</p>
            </div>
          ))}
        </div> */}

        {/*  */}
      </div>
    </div>
  );
};

{
  /*<div className="row">
          <div className="col box">
            <span className="lightpurple wh">AR Product Preview</span>
            <h4 className="desc">
              Android app using AR technology to preview 3D models in real-time
              by downloading them using FTP
            </h4>
            <p className="more">
              Unity Engine for development, C# for scripting, Gradle for builds.
            </p>
          </div>
          <div className="col box">
            <span className="lightpurple b">Nexus Webfolio</span>
            <h4 className="desc wh">
              A dynamic, space-themed web-folio for Anna University, with an AI
              chatbot to assist HRs.
            </h4>
            <p className="more">
              Next.js with GSAP for animations, AI chatbot with custom training,
              Cloudinary CDN for image optimization.
            </p>
          </div>
          <div className="col box">
            <span className="lightpurple">Space Board Game</span>
            <h4 className="desc">
              A space-themed board game with dynamic animations and advanced
              layouts for interactive gameplay.
            </h4>
            <p className="more">
              Next.js for frontend and backend, PostgreSQL via Docker, GSAP and
              Framer for animations.
            </p>
          </div>
        </div>

        
        <div className="row">
          <div className="col box">
            <span className="lightpurple wh">Veloit AI</span>
            <h4 className="desc">
              A No-code machine learning API which can be Integrated in our
              application for machine learning.
            </h4>
            <p className="more">
              The frontend works on flutter and Flask and Firebase for backend.
            </p>
          </div>
          <div className="col box">
            <span className="lightpurple b">Brain waves</span>
            <h4 className="desc wh">
              A method to interpret brain waves, with an aim to aid disabled
              people. Funded by Loyola Research Park.
            </h4>
            <p className="more">
              Non invasive ElectroEncephalogram is used with python for ML
              algorithms.
            </p>
          </div>
          <div className="col box">
            <span className="lightpurple">Pen-to-text</span>
            <h4 className="desc">
              A web app that converts text from an image into editable digital
              text using OCR technology.
            </h4>
            <p className="more">
              The frontend works on React Js and PentoPrint api for Text
              Recognition.
            </p>
          </div>
        </div>*/
}

export default Projects;
